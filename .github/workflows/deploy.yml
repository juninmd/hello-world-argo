name: Build and Deploy

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: "latest"

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Update image tag in values.yaml
        run: |
          # Extract the image tag from the build step
          IMAGE_TAG="${GITHUB_SHA:0:7}"
          sed -i "s|tag: .*|tag: \"$IMAGE_TAG\"|g" helm/values.yaml
          sed -i "s|repository: .*|repository: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}|g" helm/values.yaml

      - name: Deploy to K3s
        run: |
          helm upgrade --install webhook-cronjob ./helm \
            --namespace default \
            --create-namespace \
            --wait \
            --timeout 300s

      - name: Sync ArgoCD Application (if exists)
        run: |
          # Try to sync the ArgoCD application if it exists
          kubectl get application webhook-cronjob -n argocd 2>/dev/null && \
          kubectl patch application webhook-cronjob -n argocd --type merge -p '{"operation":{"initiatedBy":{"username":"github-actions"},"sync":{"syncStrategy":{"force":true}}}}' || \
          echo "ArgoCD application not found, skipping sync"
        continue-on-error: true

      - name: Verify deployment
        run: |
          kubectl get cronjob webhook-cronjob -o wide
          kubectl get pods -l app.kubernetes.io/name=webhook-cronjob
          echo "Deployment completed successfully!"
