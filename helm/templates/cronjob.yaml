apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "hello-world-argo.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "hello-world-argo.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: cronjob
spec:
  schedule: {{ .Values.cronjob.schedule | quote }}
  timezone: {{ .Values.cronjob.timezone | quote }}
  successfulJobsHistoryLimit: {{ .Values.cronjob.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.cronjob.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      backoffLimit: {{ .Values.cronjob.backoffLimit }}
      template:
        metadata:
          labels:
            app.kubernetes.io/name: {{ include "hello-world-argo.name" . }}
            app.kubernetes.io/instance: {{ .Release.Name }}
        spec:
          serviceAccountName: {{ include "hello-world-argo.serviceAccountName" . }}
          securityContext:
            fsGroup: {{ .Values.podSecurityContext.fsGroup }}
            runAsNonRoot: {{ .Values.podSecurityContext.runAsNonRoot }}
            runAsUser: {{ .Values.podSecurityContext.runAsUser }}
          restartPolicy: {{ .Values.cronjob.restartPolicy }}
          containers:
            - name: {{ .Chart.Name }}
              securityContext:
                allowPrivilegeEscalation: {{ .Values.securityContext.allowPrivilegeEscalation }}
                readOnlyRootFilesystem: {{ .Values.securityContext.readOnlyRootFilesystem }}
                runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
                runAsUser: {{ .Values.securityContext.runAsUser }}
                capabilities:
                  drop:
                    - ALL
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              env:
                - name: WEBHOOK_URL
                  value: {{ .Values.cronjob.webhookUrl | quote }}
                - name: CRON_EXPRESSION
                  value: {{ .Values.cronjob.schedule | quote }}
                - name: NODE_ENV
                  value: "production"
              resources:
                limits:
                  cpu: {{ .Values.resources.limits.cpu }}
                  memory: {{ .Values.resources.limits.memory }}
                requests:
                  cpu: {{ .Values.resources.requests.cpu }}
                  memory: {{ .Values.resources.requests.memory }}
              volumeMounts:
                - name: tmp
                  mountPath: /tmp
          volumes:
            - name: tmp
              emptyDir: {}
